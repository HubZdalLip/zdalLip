1. Utwórz klasę Punkt składającą się z dwóch rzeczywistych publicznych pól x oraz y.
2. Stwórz klasę ksztalt2D posiadającą pustą metodę obwod zwracającą wartość rzeczywistą oraz
metodę show wyświetlającą napis: „Obwód figury wynosi x”, gdzie x jest wartością zwracaną przez
metodę obwod.
3. Utwórz dwie klasy Kolo i Trojkat dziedziczące po klasie Ksztalt2D. Klasa Kolo dodatkowo posiada
publiczne pola Sr typu Punkt oraz r typu double. Klasa Trojkat posiada dodatkowe pola publiczne A,
B i C typu Punkt.
4. Dodaj do klasy Trojkat konstruktor domyślnie ustalający pozycję punktów na: A(0,0), B(2,-2), C(2,2).
5. Utwórz dwa konstruktory merytoryczne: jednego zależnego od trzech parametrów typu punkt
Trojkat(punkt A, punkt B, punkt C), drugiego zależnego od sześciu liczb rzeczywistych
Trojkat(double Ax, double Ay, double Bx, double By, double Cx, double Cy).
6. Dodaj do klasy prywatne rzeczywiste pola a, b, c, które będą korespondowały z długościami
boków tak, że bok leży naprzeciwko wierzchołka A.
7. Dodaj metodę prywatną boki, która wypełni pola a, b, c na podstawie położenia wierzchołków oraz
„getery” dla boków. Dopisz metodę boki tak, by była wykonywana przez konstruktory i „setery”.
8. Proszę napisać program wykorzystujący klasę Trojkat. Proszę stworzyć trójkąt przy pomocy
konstruktora domyślnego i wyświetlić długości boków na ekranie. Następnie przy pomocy seterów
ustawić położenie punktów A(-1,0.3) B(-1, 2.3) C(3, 1.3) i wyświetlić długości boków na ekranie.
9. Proszę wynik zapisać do pliku wyniki.txt.
10. Przykryj metody obwod w klasach Kolo i Trojkat tak by liczyła rzeczywisty obwód figury.
11. Napisz program, w którym utworzone zostaną obiekty k(Kolo) i tr(Trojkat) i w dowolny sposób
(konstruktor, „setery” bezpośrednie przypisanie) ich pola zostaną ustawione na: r(1), Sr(0,0), A(0,0),
B(1,1), C(-1,1).
12. Dopisz wywołanie show() dla obiektów k i tr.
